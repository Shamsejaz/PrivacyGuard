version: '3.8'

# Docker Compose configuration for backend authentication mode
# This configuration connects the frontend to a live backend (app.privacycomply.ai)
# while running the frontend in a Docker container

services:
  # Frontend - Configured for backend authentication
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - VITE_API_BASE_URL=https://app.privacycomply.ai/api/v1
        - VITE_API_URL=https://app.privacycomply.ai/api/v1
        - VITE_WS_URL=wss://app.privacycomply.ai
        - VITE_APP_NAME=PrivacyComply
        - VITE_NODE_ENV=production
    ports:
      - "80:80"
      - "443:443"
    environment:
      # Backend Authentication Configuration
      - VITE_API_BASE_URL=https://app.privacycomply.ai/api/v1
      - VITE_API_URL=https://app.privacycomply.ai/api/v1
      - VITE_WS_URL=wss://app.privacycomply.ai
      - VITE_PYTHON_PII_ENDPOINT=https://app.privacycomply.ai/pii
      
      # App Configuration
      - VITE_APP_NAME=PrivacyComply
      - VITE_APP_VERSION=1.0.0
      - VITE_NODE_ENV=production
      
      # Production Features
      - VITE_ENABLE_ANALYTICS=true
      - VITE_ENABLE_ERROR_REPORTING=true
      - VITE_ENABLE_MONITORING=true
      
      # Security Configuration
      - FORCE_HTTPS=true
      - TRUST_PROXY=true
      
    volumes:
      # SSL certificates (if available)
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/backend-auth.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - privacycomply-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Optional: Local Redis for caching (if needed)
  redis-cache:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-cache_password_2024} --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_cache_data:/data
    networks:
      - privacycomply-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-cache_password_2024}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'

volumes:
  redis_cache_data:
    driver: local

networks:
  privacycomply-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16

# Health check and monitoring
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 30s