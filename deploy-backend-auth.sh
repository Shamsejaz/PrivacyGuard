#!/bin/bash

# Bash script to deploy PrivacyComply with backend authentication
# This script configures and deploys the frontend to connect to app.privacycomply.ai

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Default values
BUILD=true
ENVIRONMENT="production"

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --no-build)
            BUILD=false
            shift
            ;;
        --logs)
            docker-compose -f docker-compose.backend-auth.yml logs -f
            exit 0
            ;;
        --stop)
            echo -e "${CYAN}🛑 Stopping services...${NC}"
            docker-compose -f docker-compose.backend-auth.yml down
            echo -e "${GREEN}✅ Services stopped${NC}"
            exit 0
            ;;
        --clean)
            echo -e "${CYAN}🧹 Cleaning up...${NC}"
            docker-compose -f docker-compose.backend-auth.yml down -v --remove-orphans
            docker system prune -f
            echo -e "${GREEN}✅ Cleanup completed${NC}"
            exit 0
            ;;
        --environment)
            ENVIRONMENT="$2"
            shift 2
            ;;
        *)
            echo "Unknown option: $1"
            echo "Usage: $0 [--no-build] [--logs] [--stop] [--clean] [--environment production]"
            exit 1
            ;;
    esac
done

function show_header() {
    echo -e "${CYAN}"
    cat << "EOF"
🚀 PrivacyComply Backend Authentication Deployment
================================================
EOF
    echo -e "Backend: https://app.privacycomply.ai/api/v1"
    echo -e "Mode: Backend Authentication"
    echo -e "Environment: $ENVIRONMENT"
    echo -e "${NC}"
}

function test_prerequisites() {
    echo -e "${CYAN}🔍 Checking prerequisites...${NC}"
    
    # Check Docker
    if command -v docker &> /dev/null; then
        DOCKER_VERSION=$(docker --version)
        echo -e "${GREEN}✅ Docker: $DOCKER_VERSION${NC}"
    else
        echo -e "${RED}❌ Docker is not installed or not running${NC}"
        exit 1
    fi
    
    # Check Docker Compose
    if command -v docker-compose &> /dev/null; then
        COMPOSE_VERSION=$(docker-compose --version)
        echo -e "${GREEN}✅ Docker Compose: $COMPOSE_VERSION${NC}"
    else
        echo -e "${RED}❌ Docker Compose is not installed${NC}"
        exit 1
    fi
    
    # Check if backend is accessible
    echo -e "${CYAN}🌐 Testing backend connectivity...${NC}"
    if curl -s --max-time 10 https://app.privacycomply.ai/health > /dev/null; then
        echo -e "${GREEN}✅ Backend is accessible${NC}"
    else
        echo -e "${YELLOW}⚠️  Could not reach backend (this may be normal if health endpoint is not available)${NC}"
        echo -e "${WHITE}   Backend URL: https://app.privacycomply.ai${NC}"
    fi
}

function set_backend_auth_mode() {
    echo -e "${CYAN}🔧 Configuring backend authentication mode...${NC}"
    
    # Create .env.local for backend auth
    cat > .env.local << EOF
# Backend Authentication Mode Configuration
# Generated by deploy-backend-auth.sh

# Live Backend Configuration
VITE_API_BASE_URL=https://app.privacycomply.ai/api/v1
VITE_API_URL=https://app.privacycomply.ai/api/v1
VITE_WS_URL=wss://app.privacycomply.ai
VITE_PYTHON_PII_ENDPOINT=https://app.privacycomply.ai/pii

# App Configuration
VITE_APP_NAME=PrivacyComply
VITE_NODE_ENV=production

# Production Features
VITE_ENABLE_ANALYTICS=true
VITE_ENABLE_ERROR_REPORTING=true
VITE_ENABLE_MONITORING=true

# Deployment Info
VITE_DEPLOYMENT_MODE=backend-auth
VITE_DEPLOYMENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
EOF
    
    echo -e "${GREEN}✅ Created .env.local with backend authentication configuration${NC}"
}

function start_deployment() {
    echo -e "${CYAN}🚀 Starting deployment...${NC}"
    
    COMPOSE_FILE="docker-compose.backend-auth.yml"
    
    if [ "$BUILD" = true ]; then
        echo -e "${CYAN}🔨 Building containers...${NC}"
        docker-compose -f $COMPOSE_FILE build --no-cache
        echo -e "${GREEN}✅ Build completed${NC}"
    fi
    
    echo -e "${CYAN}🚀 Starting services...${NC}"
    docker-compose -f $COMPOSE_FILE up -d
    echo -e "${GREEN}✅ Services started successfully${NC}"
}

function show_status() {
    echo -e "${CYAN}📊 Deployment Status${NC}"
    echo -e "${WHITE}====================${NC}"
    
    docker-compose -f docker-compose.backend-auth.yml ps
    
    echo -e "\n${CYAN}🌐 Access URLs:${NC}"
    echo -e "${WHITE}Frontend: http://localhost${NC}"
    echo -e "${WHITE}Backend API: https://app.privacycomply.ai/api/v1${NC}"
    echo -e "${WHITE}WebSocket: wss://app.privacycomply.ai${NC}"
    
    echo -e "\n${CYAN}🔑 Authentication:${NC}"
    echo -e "${WHITE}Use real user accounts from the live backend${NC}"
    echo -e "${YELLOW}Demo credentials will NOT work in this mode${NC}"
    
    echo -e "\n${CYAN}📋 Next Steps:${NC}"
    echo -e "${WHITE}1. Open http://localhost in your browser${NC}"
    echo -e "${WHITE}2. Login with valid backend credentials${NC}"
    echo -e "${WHITE}3. Check browser console for connection status${NC}"
}

# Main execution
show_header
test_prerequisites
set_backend_auth_mode
start_deployment
show_status

echo -e "\n${GREEN}🎉 Backend authentication deployment completed successfully!${NC}"
echo -e "${WHITE}Frontend is now connected to: https://app.privacycomply.ai${NC}"