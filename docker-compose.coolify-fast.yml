version: '3.8'

services:
  # Frontend - Main service for Coolify (Port 80)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=http://backend:3001
      - VITE_WS_URL=ws://backend:3001
      - VITE_APP_NAME=PrivacyGuard
      - VITE_APP_VERSION=1.0.0
      - VITE_NODE_ENV=production
      # Disable PII service for faster deployment
      - VITE_PII_SERVICE_ENABLED=false
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - privacyguard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Backend - Internal service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      
      # Database Configuration with default passwords
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=privacyguard_prod
      - POSTGRES_USER=privacyguard_user
      - POSTGRES_PASSWORD=privacyguard_secure_password_2024
      - POSTGRES_MAX_CONNECTIONS=20
      
      - MONGODB_URI=mongodb://admin:mongo_secure_password_2024@mongodb:27017/privacyguard_prod?authSource=admin
      - MONGODB_MAX_POOL_SIZE=10
      - MONGODB_MIN_POOL_SIZE=5
      
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_secure_password_2024
      - REDIS_DB=0
      
      # Security Configuration
      - JWT_SECRET=coolify_jwt_secret_at_least_32_characters_long_for_production_security_2024
      - JWT_EXPIRES_IN=1h
      - JWT_REFRESH_EXPIRES_IN=7d
      - BCRYPT_ROUNDS=12
      
      # CORS Configuration
      - CORS_ORIGIN=*
      - CORS_CREDENTIALS=true
      
      # Logging Configuration
      - LOG_LEVEL=info
      - LOG_CONSOLE=true
      - LOG_FILE=true
      - LOG_AUDIT=true
      
      # Disable PII service for faster deployment
      - PII_SERVICE_ENABLED=false
      - PII_SERVICE_URL=disabled
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=1000
      
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - privacyguard-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # PostgreSQL Database - Internal service
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: privacyguard_prod
      POSTGRES_USER: privacyguard_user
      POSTGRES_PASSWORD: privacyguard_secure_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - privacyguard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U privacyguard_user -d privacyguard_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # MongoDB Database - Internal service
  mongodb:
    image: mongo:7-jammy
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: mongo_secure_password_2024
      MONGO_INITDB_DATABASE: privacyguard_prod
    volumes:
      - mongodb_data:/data/db
      - ./backend/database/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - privacyguard-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis Cache - Internal service
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass redis_secure_password_2024 --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - privacyguard-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "redis_secure_password_2024", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 384M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  privacyguard-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16